{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Griddler.svelte",
    "../src/Block.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import _ from 'lodash';\n  import { onMount } from 'svelte';\n\timport { slide } from 'svelte/transition';\n  import { quintOut } from 'svelte/easing';\n  import { gql } from 'apollo-boost';\n  import { matrix, deepEqual } from 'mathjs';\n\n  import { generateTotals } from './utils.ts';\n  import { client, Levels } from './gql';\n  import Block from './Block.svelte';\n  import Aare from './patterns/Aare.svelte';\n  import Clarence from './patterns/Clarence.svelte';\n  import Doubs from './patterns/Doubs.svelte';\n  import Hinterrhein from './patterns/Hinterrhein.svelte';\n  import Inn from './patterns/Inn.svelte';\n  import Kander from './patterns/Kander.svelte';\n  import Linth from './patterns/Linth.svelte';\n  import Mataura from './patterns/Mataura.svelte';\n\n  const bgs = [Aare, Clarence, Inn, Kander, Mataura, Linth, Hinterrhein];\n\n  export let props = {};\n\n  let levels;\n  let boards;\n  let level;\n  let buttonDown;\n  let buttonDownValue;\n  let secondaryDown;\n\n  let levelIndex = 0;\n  let layerIndex = 0;\n  let same = false;\n\n  $: title = level ? level.title : '';\n  $: colors = level ? level.colors : '';\n  $: solution = level ? level.solution : '';\n  $: board = boards ? boards[levelIndex] : null;\n  $: color = colors ? colors[layerIndex] : null;\n  $: [rowTotals, colTotals] = (!!colors && !!solution)\n    ? generateTotals(colors, solution)[layerIndex]\n    : [[], []]\n  ;\n\n  const resetBoard = () => {\n    const width = solution[0].length;\n    const height = solution.length;\n    const _board = Array(width).fill().map(() => Array(height).fill(-1));\n    return _board;\n  }\n\n  const clearBoard = () => {\n    boards[levelIndex] = [\n      ...Array(solution[0].length).fill().map(\n        () => Array(solution.length).fill(-1)\n      )\n    ]\n  }\n\n  const changeLevel = (d) => {\n    same = false;\n    levelIndex += d;\n    layerIndex = 0;\n    board = resetBoard(solution);\n  }\n\n  const compareBoard = () => {\n    console.log('Comparing board...')\n    const tmpBoard = [\n      ...board.map(row => row.map(col => col === -2 ? -1 : col))\n    ];\n    same = deepEqual(matrix(solution), matrix(board));\n\n    if (same && levelIndex < levels.length) {\n      setLevelIndex(levelIndex + 1);\n    }\n  }\n\n  const setLevelIndex = index => {\n    levelIndex = index;\n    level = levels[levelIndex];\n  };\n  const setLayerIndex = index => { layerIndex = index; };\n\n  const toggleDisabled = (row, col) => (\n    board[row][col] = board[row][col] === -2\n      ? -1\n      : -2\n  );\n\n  const mouseDown = (e, row, col) => {\n    if (board[row][col] < -1) {\n      return false;\n    }\n\n    buttonDown = e.button;\n\n    switch(buttonDown) {\n      case 0:\n        buttonDownValue = board[row][col] === -1 ? layerIndex : -1;\n        break;\n      case 2:\n        buttonDownValue = -2;\n        break;\n    }\n    board[row][col] = buttonDownValue\n  }\n\n  const mouseEnter = (row, col) => {\n    if (\n      board[row][col] < -1\n      || board[row][col] === buttonDownValue\n    ) {\n      return false;\n    }\n\n    if (buttonDown !== null && buttonDownValue !== null) {\n      board[row][col] = buttonDownValue;\n    }\n  }\n\n  const mouseUp = (row, col) => {\n    buttonDown = null;\n    buttonDownValue = null;\n    compareBoard();\n  }\n\n  const toggleEnabled = (row, col) => {\n    if (board[row][col] < -1) {\n      return false;\n    }\n\n    board[row][col] = board[row][col] === -1\n      ? layerIndex\n      : -1;\n\n    compareBoard();\n  };\n\n  onMount(async () => {\n    const resp = await client.query({ query: Levels });\n    levels = resp.data.levels;\n    boards = levels.map(l => l.solution.map(r => r.map(c => -1)));\n    level = levels[levelIndex];\n  });\n</script>\n\n<style>\n  h1 {\n    color: #222;\n    font-size: 1.3rem;\n    text-align: center;\n    text-transform: uppercase;\n  }\n\n  .main {\n    background-color: rgba(255, 255, 255, 0.9);\n    border: 8px solid #111;\n    padding: 0 2rem 2rem;\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n\n  .flex-row {\n    display: flex;\n  }\n\n  .flex-col {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .justify-center {\n    justify-content: center;\n  }\n\n  .margin-bottom {\n    margin-bottom: 1rem;\n  }\n\n  .board {\n    display: grid;\n    grid-gap: 0px;\n  }\n\n  .level-select {\n    align-items: center;\n    background: #fff;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: 4px;\n    cursor: pointer;\n    display: inline-flex;\n    height: 20px;\n    justify-content: center;\n    margin-right: 0.5rem;\n    padding: 0.5rem;\n    width: 20px;\n  }\n\n  .level-select:last-of-type {\n    margin-right: 0;\n  }\n\n  .close.icon {\n    color: #000;\n    position: absolute;\n    margin-top: 0;\n    margin-left: 0;\n    width: 21px;\n    height: 21px;\n  }\n\n  .close.icon:before {\n    content: '';\n    position: absolute;\n    top: 10px;\n    width: 21px;\n    height: 1px;\n    background-color: currentColor;\n    transform: rotate(-45deg);\n  }\n\n  .close.icon:after {\n    content: '';\n    position: absolute;\n    top: 10px;\n    width: 21px;\n    height: 1px;\n    background-color: currentColor;\n    transform: rotate(45deg);\n  }\n</style>\n\n{#if colors}\n  <svelte:component\n    this={bgs[levelIndex]}\n    colors={colors}\n    styles=\"position: absolute; z-index: -1; top: 0; bottom: 0; left: 0; right: 0;\"\n  />\n{/if}\n<div class=\"main\">\n  {#if levels && !!levels.length}\n    <div class=\"flex-row justify-center\" style=\"margin: 1rem 0\">\n      {#each levels as level, index}\n        <div class=\"level-select\" on:click={() => setLevelIndex(index)}>\n          {index}\n        </div>\n      {/each}\n    </div>\n  {/if}\n  <h1>{levelIndex}: {title}</h1>\n  {#if colors && !!colors.length}\n    <div class=\"flex-row justify-center margin-bottom\">\n      {#each colors as color, index}\n        <Block\n          state={1}\n          color={color}\n          onClick={() => { setLayerIndex(index); }}\n          styles=\"border-radius: 4px; margin: 0 4px;\"\n        >\n          {color}\n        </Block>\n      {/each}\n      <Block\n        state={1}\n        color={'#ddd'}\n        onClick={() => clearBoard()}\n        styles=\"border-radius: 4px; margin: 0 4px; position: relative;\"\n      >\n        <div class=\"close icon\" />\n      </Block>\n    </div>\n  {/if}\n  <div class=\"flex-row justify-center\">\n    {#if colTotals && !!colTotals.length}\n      <Block\n        color={color}\n        state={1}\n        styles=\"border-top-left-radius: 24px;\"\n      />\n      {#each colTotals as total}\n        <Block\n          color={color}\n          state={1}\n        >\n          {total}\n        </Block>\n      {/each}\n      <Block\n        color={color}\n        state={1}\n        styles=\"border-top-right-radius: 24px;\"\n      />\n    {/if}\n  </div>\n  <div class=\"flex-row justify-center\">\n    {#if rowTotals && !!rowTotals.length}\n      <div class=\"flex-col\">\n        {#each rowTotals as total}\n          <Block\n            color={color}\n            state={1}\n          >\n            {total}\n          </Block>\n        {/each}\n      </div>\n    {/if}\n    {#if board}\n      <div class=\"flex-row\">\n        <section\n          class=\"board\"\n          style=\"grid-template-columns: repeat({board[0].length}, 1fr); grid-template-rows: repeat({board.length}, 1fr);\"\n        >\n          {#each board as row, rowIndex}\n            {#each row as item, colIndex}\n              <Block\n                state={item}\n                row={rowIndex}\n                col={colIndex}\n                onMouseDown={mouseDown}\n                onMouseEnter={mouseEnter}\n                onMouseUp={mouseUp}\n                onRightClick={toggleDisabled}\n                color={colors[item]}\n                buttonDown={buttonDown}\n              />\n            {/each}\n          {/each}\n        </section>\n      </div>\n    {/if}\n    {#if rowTotals && !!rowTotals.length}\n      <div class=\"flex-col\">\n        {#each rowTotals as total}\n          <Block\n            color={color}\n            state={1}\n          >\n            {total}\n          </Block>\n        {/each}\n      </div>\n    {/if}\n  </div>\n  {#if colTotals && !!colTotals.length}\n    <div class=\"flex-row justify-center\">\n      <Block\n        color={color}\n        state={1}\n        styles=\"border-bottom-left-radius: 24px;\"\n      />\n      {#each colTotals as total}\n        <Block\n          color={color}\n          state={1}\n        >\n          {total}\n        </Block>\n      {/each}\n      <Block\n        color={color}\n        state={1}\n        styles=\"border-bottom-right-radius: 24px;\"\n      />\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import tinycolor from 'tinycolor2';\n\n  export let row;\n  export let col;\n  export let state = -1;\n  export let color;\n  export let onClick;\n  export let onMouseEnter;\n  export let onMouseOver;\n  export let onMouseLeave;\n  export let onMouseDown;\n  export let onMouseUp;\n  export let onRightClick;\n  export let transitionTime = 0.2;\n  export let styles;\n  export let buttonDown;\n\n  const white = '#eee';\n  const black = '#111';\n  const red = '#d22';\n  let hover = false;\n\n  $: disabled = state === -2;\n  $: bg = state === -1 ? white : color;\n  $: textColor = tinycolor(bg).isLight() ? black : white;\n  $: _styles = `background: ${bg}; color: ${textColor}; transition: all ${transitionTime}s ease-in-out;${!!styles ? styles : ''}`;\n</script>\n\n<style>\n  div {\n    align-items: center;\n    background-color: #fff;\n    border: 1px solid rgba(0, 0, 0, 0.4);\n    box-sizing: border-box;\n    cursor: pointer;\n    display: flex;\n    font-size: 14px;\n    justify-content: center;\n    height: 48px;\n    width: 48px;\n    position: relative;\n  }\n\n  div.disabled {\n    background-color: #eee;\n    background-image: repeating-linear-gradient(\n      45deg,\n      transparent,\n      transparent 3px,\n      rgba(0, 0, 0, 0.15) 3px,\n      rgba(0, 0, 0, 0.25) 6px\n    );\n  }\n</style>\n\n<div\n  class:disabled\n  style=\"{_styles}\"\n  on:click={() => {\n    if (onClick) {\n      onClick(row, col);\n    }\n  }}\n  on:mousedown={(e) => {\n    if (onMouseDown) {\n      onMouseDown(e, row, col);\n    }\n  }}\n  on:mouseup={() => {\n    if (onMouseUp) {\n      onMouseUp(row, col);\n    }\n  }}\n  on:mouseenter={() => {\n    hover = true;\n    if (onMouseEnter) {\n      onMouseEnter(row, col);\n    }\n  }}\n  on:mouseover={() => {\n    if (onMouseEnter) {\n      onMouseEnter(row, col);\n    }\n  }}\n  on:mouseleave={() => {\n    hover = false;\n    if (onMouseLeave) {\n      onMouseLeave(row, col);\n    }\n  }}\n  on:contextmenu={(e) => {\n    if (onRightClick) {\n      e.preventDefault();\n      onRightClick(row, col);\n    }\n  }}\n>\n  <slot />\n</div>"
  ],
  "names": [],
  "mappings": "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"
}