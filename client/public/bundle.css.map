{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Griddler.svelte",
    "../src/Buildler.svelte",
    "../src/Block.svelte",
    "../src/BuildlerBlock.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import _ from 'lodash';\n  import { Router, Route } from 'svero';\n\n  import { client, Levels } from './gql';\n  import Griddler from './Griddler.svelte';\n  import Buildler from './Buildler.svelte';\n\n  const levels = async() => await client.query({ query: Levels });\n\n  let currentLevel = 0;\n  let buildMode = true;\n</script>\n\n<style>\n  .flex {\n    display: flex;\n    justify-content: center;\n  }\n\n  button {\n    background: #DFE;\n    border: 4px solid #DFE;\n    border-radius: 4px;\n    padding: 0.5rem 1rem;\n    transition: 0.2s all ease-in-out;\n  }\n\n  button + button {\n    margin-left: 1rem;\n  }\n\n  button:hover,\n  button.active {\n    border: 4px solid rgba(0, 0, 0, 0.4);\n  }\n</style>\n\n{#await levels()}\n  <span>Loading</span>\n{:then resp}\n  <section>\n    <div class=\"flex\">\n      <button\n        on:click={() => buildMode = false}\n        class=\"{!buildMode ? 'active' : ''}\"\n      >\n        Play\n      </button>\n      <button\n        on:click={() => buildMode = true}\n        class=\"{buildMode ? 'active' : ''}\"\n      >\n        Build\n      </button>\n    </div>\n\n    <Router>\n      <Route path=\"/build\">\n        <Buildler />\n      </Route>\n      <Route path=\"/play/:index\" fallback>\n        <Griddler\n          levels={resp.data.levels}\n          boards={resp.data.levels.map(l => l.solution.map(r => r.map(c => -1)))}\n        />\n      </Route>\n    </Router>\n  </section>\n{:catch error}\n  <span>{error}</span>\n{/await}",
    "<script>\n  import _ from 'lodash';\n\timport { slide } from 'svelte/transition';\n  import { quintOut } from 'svelte/easing';\n\n  import { gql } from 'apollo-boost';\n  import { onMount } from 'svelte';\n  import { client } from './gql';\n  import { matrix, deepEqual } from 'mathjs';\n  import { generateTotals } from './utils.ts';\n  import Block from './Block.svelte';\n\n  export let props = {};\n  export let levels;\n  export let boards;\n\n  console.log(`${_.isEmpty(props)}`);\n\n  let levelIndex = 0;\n  let layerIndex = 0;\n  let same = false;\n\n  $: level = levels[levelIndex];\n  $: title = level.title;\n  $: colors = level.colors;\n  $: solution = level.solution;\n  $: board = boards[levelIndex];\n  $: color = colors[layerIndex];\n  $: [rowTotals, colTotals] = generateTotals(colors, solution)[layerIndex];\n\n  const resetBoard = (solution) => {\n    const width = solution[0].length;\n    const height = solution.length;\n    const _board = Array(width).fill().map(() => Array(height).fill(-1));\n    return _board;\n  }\n\n  const changeLevel = (d) => {\n    same = false;\n    levelIndex += d;\n    board = resetBoard(solution);\n  }\n\n  const setLayerIndex = index => { layerIndex = index; };\n\n  const toggleDisabled = (row, col) => (\n    board[row][col] = board[row][col] === -2\n      ? -1\n      : -2\n  );\n\n  const toggleEnabled = (row, col) => {\n    board[row][col] = board[row][col] === -1\n      ? layerIndex\n      : -1\n    same = deepEqual(matrix(solution), matrix(board));\n\n    if (same && levelIndex < levels.length) {\n\n    }\n  };\n</script>\n\n<style>\n  h1 {\n    color: #222;\n    font-size: 1.3rem;\n    text-align: center;\n    text-transform: uppercase;\n  }\n\n  .flex-row {\n    display: flex;\n  }\n\n  .flex-col {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .justify-center {\n    justify-content: center;\n  }\n\n  .margin-bottom {\n    margin-bottom: 1rem;\n  }\n\n  .board {\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    grid-template-rows: repeat(7, 1fr);\n    grid-gap: 0px;\n  }\n</style>\n\n\n\n<div>\n  <h1>{title}</h1>\n  <div>\n    {_.isEmpty(props).toString()}\n  </div>\n  <div class=\"flex-row justify-center margin-bottom\">\n    {#each colors as color, index}\n      <Block\n        state={1}\n        color={color}\n        onClick={() => { setLayerIndex(index); }}\n      >\n        {color}\n      </Block>\n    {/each}\n  </div>\n  <div class=\"flex-row justify-center\">\n    <Block\n      color={color}\n      state={1}\n    />\n    {#each colTotals as total}\n      <Block\n        color={color}\n        state={1}\n      >\n        {total}\n      </Block>\n    {/each}\n    <Block\n      color={color}\n      state={1}\n    />\n  </div>\n  <div class=\"flex-row justify-center\">\n    <div class=\"flex-col\">\n      {#each rowTotals as total}\n        <Block\n          color={color}\n          state={1}\n        >\n          {total}\n        </Block>\n      {/each}\n    </div>\n    <div class=\"flex-row\">\n      <section class=\"board\">\n        {#each board as row, rowIndex}\n          {#each row as item, colIndex}\n            <Block\n              state={item}\n              row={rowIndex}\n              col={colIndex}\n              onClick={toggleEnabled}\n              onRightClick={toggleDisabled}\n              color={colors[item]}\n            />\n          {/each}\n        {/each}\n      </section>\n    </div>\n    <div class=\"flex-col\">\n      {#each rowTotals as total}\n        <Block\n          color={color}\n          state={1}\n        >\n          {total}\n        </Block>\n      {/each}\n    </div>\n  </div>\n  <div class=\"flex-row justify-center\">\n    <Block\n      color={color}\n      state={1}\n    />\n    {#each colTotals as total}\n      <Block\n        color={color}\n        state={1}\n      >\n        {total}\n      </Block>\n    {/each}\n    <Block\n      color={color}\n      state={1}\n    />\n  </div>\n  <div class=\"flex-row justify-center\">\n    {same.toString()}\n  </div>\n</div>",
    "<script>\n  import { zeros } from 'mathjs';\n\timport { slide } from 'svelte/transition';\n  import { quintOut } from 'svelte/easing';\n\n  import { hexColors } from './colors';\n  import { client, AddLevel } from './gql';\n  import BuildlerBlock from './BuildlerBlock.svelte';\n\n  const MIN_SIZE = 2;\n  const MAX_SIZE = 24;\n\n  let title = '';\n  let width = 8;\n  let height = 8;\n  let colors = [];\n  let colorIndex = -1;\n  let showColorPicker;\n  $: solution = resetSolution(width, height);\n\n  const resetSolution = (width, height) => {\n    const _solution = Array(width).fill().map(() => Array(height).fill(-1))\n    console.log(_solution);\n    return _solution;;\n  }\n\n  const reset = (row, col) => {\n    solution[row][col] = -1\n  };\n\n  const toggleEnabled = (row, col) => solution[row][col] = solution[row][col] === -1\n    ? colorIndex\n    : -1;\n\n  const selectColor = index => colorIndex = index;\n  const deleteColor = index => colors.slice(index, 1);\n  const toggleShowColorPicker = () => showColorPicker = true;\n\n  const valueToHex = (v, short = true) => {\n    const hex = v.toString(16);\n    hex = hex.length == 1 ? \"0\" + hex : hex;\n    return short ? hex[0] : hex;\n  }\n\n  const addColor = (hex) => {\n    colors = [...colors, `#${hex}`];\n    colorIndex = colors.length - 1;\n    showColorPicker = false;\n  }\n\n  const addLevel = async () => {\n    if (!title || !colors.length) {\n      return null;\n    }\n    const level = { title, colors, solution };\n    const resp = await client.mutate({\n      mutation: AddLevel,\n      variables: { level }\n    });\n    debugger;\n  }\n</script>\n\n<style>\n  section {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    width: 100%;\n    height: 100%;\n  }\n\n  input[type=\"number\"] {\n    margin: 2rem auto 1rem;\n    width: 50px;\n  }\n\n  .board {\n    display: grid;\n    grid-gap: 0px;\n  }\n\n  .color-selector-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(255, 255, 255, 0.6);\n    content: '';\n    z-index: 0;\n  }\n\n  .color-selector {\n    display: grid;\n    grid-gap: 0px;\n    grid-template-columns: repeat(auto-fill, minmax(32px, 1fr));\n    width: 512px;\n    height: 80vh;\n    overflow-y: scroll;\n    z-index: 1;\n  }\n\n  .color-option {\n    width: 32px;\n    height: 32px;\n    cursor: pointer;\n    margin: 2px;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    transition: all 0.2s ease-in-out;\n  }\n\n  .color-option:hover {\n    box-shadow: inset 0 0 2px rgba(255, 255, 255, 0.2);\n  }\n\n  .colors {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    height: 100%;\n    margin-bottom: 1rem;\n  }\n\n  .color {\n    align-items: center;\n    display: flex;\n    height: 32px;\n    justify-content: center;\n    width: 32px;\n    color: #eee;\n    font-size: 12px;\n    cursor: pointer;\n    margin: 2px;\n    transition: all 0.2s ease-in-out;\n    border-radius: 4px;\n  }\n\n  .color.active {\n    padding: 2px;\n    border: 2px solid black;\n  }\n\n  .color.add {\n    background: #ddd;\n    color: #333;\n  }\n</style>\n\n<div>\n  <section>\n    <div>\n      <input\n        bind:value={title}\n        type=\"text\"\n        placeholder=\"Griddler Title\"\n      />\n      <input\n        bind:value={width}\n        type=number\n        min=0\n        max={MAX_SIZE}\n      />\n      <input\n        bind:value={height}\n        type=number\n        min=0\n        max={MAX_SIZE}\n      />\n    </div>\n  </section>\n\n  {#if showColorPicker}\n    <div\n      class=\"color-selector-container\"\n      on:click={() => showColorPicker = false}\n    >\n      <section\n        class=\"color-selector\"\n        on:click={() => showColorPicker = false}\n      >\n        {#each hexColors as color}\n          <div\n            on:click={() => addColor(color)}\n            class=\"color-option\"\n            style=\"background: #{color};\"\n          />\n        {/each}\n      </section>\n    </div>\n  {/if}\n\n  <section>\n    <div class=\"colors\">\n      {#if !colors.length}\n        <span>No colors added</span>\n      {/if}\n      {#each colors as color, index}\n        <div\n          class=\"color {index === colorIndex && 'active'}\"\n          style=\"background: {color}\"\n          on:click={() => selectColor(index)}\n          on:contextmenu={(e) => {\n            e.preventDefault();\n            reset(index)\n          }}\n        >\n          {color}\n        </div>\n      {/each}\n      <div class=\"color add\" on:click={() => toggleShowColorPicker()}>\n        +\n      </div>\n    </div>\n  </section>\n  <section>\n    <div\n      class=\"board\"\n      style=\"grid-template-columns: repeat({width}, 1fr); grid-template-rows: repeat({height}, 1fr);\"\n    >\n      {#each solution as row, rowIndex}\n        {#each row as col, colIndex}\n          <BuildlerBlock\n            row={rowIndex}\n            col={colIndex}\n            state={col}\n            color={colors[col]}\n            onClick={() => toggleEnabled(rowIndex, colIndex)}\n            on:contextmenu={() => reset(rowIndex, colIndex)}\n            transitionTime={0.05}\n          />\n        {/each}\n      {/each}\n    </div>\n  </section>\n\n  <div style=\"display: flex; justify-content: center; margin-top: 2rem;\">\n    <button\n      on:click={() => addLevel()}\n    >\n      Save\n    </button>\n  </div>\n</div>\n",
    "<script>\n  export let row;\n  export let col;\n  export let state = -1;\n  export let color;\n  export let onClick;\n  export let onRightClick;\n  export let transitionTime = 0.2;\n\n  const white = '#eee';\n  const black = '#111';\n  const red = '#d22';\n\n  $: bg = state === -2 ? red : (state === -1 ? white : color);\n  $: textColor = bg === white ? black : white;\n\n</script>\n\n<style>\n  div {\n    align-items: center;\n    background: white;\n    border: 2px solid rgba(0, 0, 0, 0.4);\n    box-sizing: border-box;\n    cursor: pointer;\n    display: flex;\n    font-size: 14px;\n    height: 48px;\n    justify-content: center;\n    width: 48px;\n  }\n</style>\n\n<div\n  style=\"background: {bg}; color: {textColor}; transition: all {transitionTime}s ease-in-out;\"\n  on:click={() => {\n    if (onClick) {\n      onClick(row, col);\n    }\n  }}\n  on:contextmenu={(e) => {\n    if (onRightClick) {\n      e.preventDefault();\n      onRightClick(row, col);\n    }\n  }}\n>\n  <slot />\n</div>",
    "<script>\n  export let row;\n  export let col;\n  export let state = 0;\n  export let color;\n  export let onClick;\n  export let onRightClick;\n  export let transitionTime = 0.2;\n\n  const white = '#eee';\n  const black = '#111';\n  const red = '#d22';\n\n  $: bg = state === -2 ? red : (state === -1 ? white : color);\n  $: textColor = bg === white ? black : white;\n\n</script>\n\n<style>\n  div {\n    align-items: center;\n    background: white;\n    border: 2px solid rgba(0, 0, 0, 0.4);\n    box-sizing: border-box;\n    cursor: pointer;\n    display: flex;\n    font-size: 14px;\n    height: 48px;\n    justify-content: center;\n    width: 48px;\n  }\n</style>\n\n<div\n  style=\"background: {bg}; color: {textColor}; transition: all {transitionTime}s ease-in-out;\"\n  on:click={() => onClick && onClick(row, col)}\n  on:contextmenu={(e) => {\n    if (onRightClick) {\n      e.preventDefault();\n      onRightClick(row, col);\n    }\n  }}\n>\n  <slot />\n</div>"
  ],
  "names": [],
  "mappings": "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"
}