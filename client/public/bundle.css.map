{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Griddler.svelte",
    "../src/Block.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import _ from 'lodash';\n  import { onMount } from 'svelte';\n\timport { slide } from 'svelte/transition';\n  import { quintOut } from 'svelte/easing';\n  import { gql } from 'apollo-boost';\n  import { matrix, deepEqual } from 'mathjs';\n\n  import { generateTotals } from './utils.ts';\n  import { client, Levels } from './gql';\n  import Block from './Block.svelte';\n  import Aare from './patterns/Aare.svelte';\n  import Clarence from './patterns/Clarence.svelte';\n  import Doubs from './patterns/Doubs.svelte';\n  import Hinterrhein from './patterns/Hinterrhein.svelte';\n  import Inn from './patterns/Inn.svelte';\n  import Kander from './patterns/Kander.svelte';\n  import Linth from './patterns/Linth.svelte';\n  import Mataura from './patterns/Mataura.svelte';\n\n  const bgs = [Aare, Clarence, Inn, Kander, Mataura, Linth, Hinterrhein];\n\n  let levels;\n  let enabledBoards;\n  let disabledBoards;\n  let level;\n  let buttonDown = null;\n  let buttonDownValue = null;\n  let size = 32;\n\n  let levelIndex = 0;\n  let layerIndex = 0;\n  let same = false;\n\n  $: title = level ? level.title : '';\n  $: colors = level ? level.colors : '';\n  $: solution = level ? level.solution : '';\n  $: enabledBoard = enabledBoards ? enabledBoards[layerIndex] : null;\n  $: disabledBoard = disabledBoards ? disabledBoards[layerIndex] : null;\n  //$: totalEnabled = enabledBoards ? enabledBoards.map()\n  $: width = solution ? solution[0].length : 0;\n  $: height = solution ? solution.length : 0;\n  $: color = colors ? colors[layerIndex] : null;\n  $: [top, left, bottom, right] = (!!colors && !!solution)\n    ? generateTotals(colors, solution)[layerIndex]\n    : [[], [], [], []];\n\n  const DISABLED = -2;\n  const OPEN = -1;\n\n  onMount(async () => {\n    const resp = await client.query({ query: Levels });\n    levels = resp.data.levels;\n    enabledBoards = levels.map(l => l.solution.map(r => r.map(c => OPEN)));\n    disabledBoards = levels.map(l => l.solution.map(r => r.map(c => OPEN)));\n    level = levels[levelIndex];\n  });\n\n  const getCleanBoard = () => {\n    const _board = Array(width).fill().map(() => Array(height).fill(OPEN));\n    return _board;\n  }\n\n  const clearBoards = () => {\n    disabledBoards[levelIndex] = getCleanBoard();\n    enabledBoards[levelIndex] = getCleanBoard();\n  }\n\n  const clearDisabledBoard = () => {\n    disabledBoards[levelIndex] = getCleanBoard();\n  }\n\n  const clearEnabledBoard = () => {\n    enabledBoards[levelIndex] = getCleanBoard();\n  }\n\n  const changeLevel = (d) => {\n    same = false;\n    levelIndex += d;\n    layerIndex = 0;\n    enabledBoard = getCleanBoard(solution);\n    disabledBoard = getCleanBoard(solution);\n  }\n\n  const compareBoard = () => {\n    same = deepEqual(matrix(solution), matrix(enabledBoard));\n\n    if (same && levelIndex < levels.length) {\n      setLevelIndex(levelIndex + 1);\n    }\n  }\n\n  const setLevelIndex = index => {\n    levelIndex = index;\n    level = levels[levelIndex];\n  };\n\n  const setLayerIndex = index => {\n    layerIndex = index;\n  };\n\n  const mouseDown = (e, row, col) => {\n    buttonDown = e.button;\n\n    if (buttonDown === 0){\n      if (disabledBoard[row][col] === layerIndex) {\n        return;\n      }\n\n      buttonDownValue = enabledBoard[row][col] === OPEN\n        ? layerIndex\n        : OPEN;\n    }\n\n    if (buttonDown === 2) {\n      buttonDownValue = disabledBoard[row][col] === OPEN\n        ? layerIndex\n        : OPEN;\n    }\n  }\n\n  const mouseMove = (row, col) => {\n    if (\n      buttonDown === null\n      || buttonDownValue === null\n      || disabledBoard[row][col] === layerIndex\n    ) {\n      return false;\n    }\n\n    if (buttonDown === 0) {\n      enabledBoard[row][col] = buttonDownValue;\n    } else if (buttonDown === 2) {\n      disabledBoard[row][col] = buttonDownValue;\n    }\n  }\n\n  const mouseUp = (row, col) => {\n    buttonDown = null;\n    buttonDownValue = null;\n    compareBoard();\n  }\n\n  const toggleEnabled = (row, col) => {\n    if (disabledBoard[row][col] === layerIndex) {\n      return false;\n    }\n\n    enabledBoard[row][col] = enabledBoard[row][col] === OPEN\n      ? layerIndex\n      : OPEN;\n    compareBoard();\n  };\n\n  const toggleDisabled = (row, col) => {\n    disabledBoard[row][col] = disabledBoard[row][col] === OPEN\n      ? layerIndex\n      : OPEN;\n  };\n</script>\n\n<style>\n  h1 {\n    color: #222;\n    font-size: 1.3rem;\n    text-align: center;\n    text-transform: uppercase;\n  }\n\n  .main {\n    background-color: rgba(255, 255, 255, 0.9);\n    border: 8px solid #111;\n    padding: 0 2rem 2rem;\n    border-bottom-left-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n\n  .flex-row {\n    display: flex;\n  }\n\n  .flex-col {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .justify-center {\n    justify-content: center;\n  }\n\n  .margin-bottom {\n    margin-bottom: 1rem;\n  }\n\n  .board {\n    display: grid;\n    grid-gap: 0px;\n  }\n\n  .level-select {\n    align-items: center;\n    background: #fff;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    cursor: pointer;\n    display: inline-flex;\n    justify-content: center;\n  }\n\n  .level-select:last-of-type {\n    margin-right: 0;\n  }\n\n  .close-button {\n    align-items: center;\n    border-radius: 4px;\n    color: #666;\n    cursor: pointer;\n    display: flex;\n    font-size: 20px;\n    height: 42px;\n    justify-content: center;\n    letter-spacing: 1.25px;\n    margin: 1rem 4px 0;\n    position: relative;\n    text-transform: uppercase;\n    width: 200px;\n  }\n\n  .close.icon {\n    color: #333;\n    margin-right: 0.75rem; \n    width: 21px;\n    height: 21px;\n    position: relative;\n  }\n\n  .close.icon:before {\n    content: '';\n    position: absolute;\n    top: 10px;\n    width: 21px;\n    height: 1px;\n    background-color: currentColor;\n    transform: rotate(-45deg);\n  }\n\n  .close.icon:after {\n    content: '';\n    position: absolute;\n    top: 10px;\n    width: 21px;\n    height: 1px;\n    background-color: currentColor;\n    transform: rotate(45deg);\n  }\n</style>\n\n{#if colors}\n  <svelte:component\n    this={bgs[levelIndex]}\n    colors={colors}\n    styles=\"position: absolute; z-index: -1; top: 0; bottom: 0; left: 0; right: 0;\"\n  />\n{/if}\n<div class=\"main\">\n  {#if levels && !!levels.length}\n    <div class=\"flex-row justify-center\" style=\"margin: 1rem 0\">\n      {#each levels as level, index}\n        <div\n          class=\"level-select\"\n          on:click={() => setLevelIndex(index)}\n          style=\"border-radius: {size / 4}px; margin-right: {size / 4}px; padding: {size / 4}px; height: {size}px; width: {size}px; \"\n        >\n          {index}\n        </div>\n      {/each}\n    </div>\n  {/if}\n  <h1>{levelIndex}: {title} ({width}, {height})</h1>\n  {#if colors && !!colors.length}\n    <div class=\"flex-row justify-center margin-bottom\">\n      {#each colors as color, index}\n        <Block\n          enabledState={1}\n          color={color}\n          onClick={() => { setLayerIndex(index); }}\n          size={size}\n        >\n          {color}\n        </Block>\n      {/each}\n    </div>\n  {/if}\n  {#if left && !!left.length}\n    <div class=\"flex-row justify-center\">\n      {#each top as totals}\n        <div class=\"flex-col\">\n          {#each totals as total}\n            <Block\n              color={color}\n              enabledState={1}\n              size={size}\n            >\n              {total}\n            </Block>\n          {/each}\n        </div>\n      {/each}\n    </div>\n  {/if}\n  <div class=\"flex-row justify-center\">\n    {#if left && !!left.length}\n      <div class=\"flex-col\">\n        {#each left as totals}\n          <div class=\"flex-row\">\n            {#each totals as total}\n              <Block\n                color={color}\n                enabledState={1}\n                size={size}\n              >\n                {total}\n              </Block>\n            {/each}\n          </div>\n        {/each}\n      </div>\n    {/if}\n    {#if disabledBoard}\n      <div class=\"flex-row\">\n        <section\n          class=\"board\"\n          style=\"grid-template-columns: repeat({disabledBoard[0].length}, 1fr); grid-template-rows: repeat({disabledBoard.length}, 1fr);\"\n        >\n          {#each disabledBoard as row, rowIndex}\n            {#each row as item, colIndex}\n              <Block\n                enabledState={enabledBoard[rowIndex][colIndex]}\n                disabledState={disabledBoard[rowIndex][colIndex]}\n                row={rowIndex}\n                col={colIndex}\n                layerIndex={layerIndex}\n                onMouseDown={mouseDown}\n                onMouseMove={mouseMove}\n                onMouseUp={mouseUp}\n                onClick={toggleEnabled}\n                onRightClick={toggleDisabled}\n                buttonDown={buttonDown}\n                size={size}\n                color={colors[layerIndex]}\n              />\n            {/each}\n          {/each}\n        </section>\n      </div>\n    {/if}\n    {#if right && !!right.length}\n      <div class=\"flex-col\">\n        {#each right as totals}\n          <div class=\"flex-row\">\n            {#each totals as total}\n              <Block\n                color={color}\n                enabledState={1}\n                size={size}\n              >\n                {total}\n              </Block>\n            {/each}\n          </div>\n        {/each}\n      </div>\n    {/if}\n  </div>\n  {#if bottom && !!bottom.length}\n    <div class=\"flex-row justify-center\">\n      {#each bottom as totals}\n        <div class=\"flex-col\" style=\"justify-content: flex-start;\">\n          {#each totals as total}\n            <Block\n              color={color}\n              enabledState={1}\n              size={size}\n            >\n              {total}\n            </Block>\n          {/each}\n        </div>\n      {/each}\n    </div>\n  {/if}\n  <div class=\"flex-row justify-center\">\n    <div on:click={clearBoards} class=\"close-button\">\n      <div class=\"close icon\" /> Clear\n    </div>\n  </div>\n </div>\n",
    "<script>\n  import tinycolor from 'tinycolor2';\n  import { afterUpdate } from 'svelte';\n\n  const OPEN = -1;\n  const white = '#eee';\n  const black = '#111';\n\n  export let row = null;\n  export let col = null;\n  export let layerIndex = null;\n  export let enabledState = OPEN;\n  export let disabledState = OPEN;\n  export let color = null;\n  export let onMouseDown;\n  export let onMouseMove;\n  export let onMouseUp;\n  export let onClick;\n  export let onRightClick;\n  export let transitionTime = 0.2;\n  export let size = 48;\n\n  afterUpdate(() => {\n    if (row === 0 && col === 0) {\n      console.log(disabledState, enabledState);\n    }\n  })\n\n  $: disabled = disabledState === layerIndex;\n  $: bg = enabledState === OPEN && disabledState === OPEN\n    ? white\n    : color;\n  $: textColor = tinycolor(bg).isLight() ? black : white;\n  $: bgImage = disabled \n    ? `repeating-linear-gradient(45deg,transparent,transparent 3px,${bg} 3px,${bg} 6px)`\n    : 'none'\n  $: style = `\n    background-color: ${disabled ? white : bg};\n    background-image: ${bgImage};\n    color: ${textColor};\n    font-size: ${size / 3}px;\n    height: ${size}px;\n    transition: all ${transitionTime}s ease-in-out;\n    width: ${size}px;\n  `;\n</script>\n\n<style>\n  div {\n    align-items: center;\n    border: 1px solid rgba(0, 0, 0, 0.4);\n    box-sizing: border-box;\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    position: relative;\n  }\n</style>\n\n<div\n  {style}\n  on:click={(e) => {\n    e.preventDefault();\n\n    if (onClick) {\n      onClick(row, col);\n    }\n  }}\n  on:contextmenu={(e) => {\n    e.preventDefault();\n\n    if (onRightClick) {\n      onRightClick(row, col);\n    }\n  }}\n  on:mousedown={(e) => {\n    e.preventDefault();\n\n    if (onMouseDown) {\n      onMouseDown(e, row, col);\n    }\n  }}\n  on:mousemove={(e) => {\n    e.preventDefault();\n\n    if (onMouseMove) {\n      onMouseMove(row, col);\n    }\n  }}\n  on:mouseup={(e) => {\n    e.preventDefault();\n\n    if (onMouseUp) {\n      onMouseUp(row, col);\n    }\n  }}\n>\n  <slot />\n</div>\n\n"
  ],
  "names": [],
  "mappings": "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"
}